// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReactLabRemake.Model;

namespace ReactLabRemake.Migrations
{
    [DbContext(typeof(TheContext))]
    partial class TheContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReactLabRemake.Model.Highscore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Score");

                    b.Property<DateTime>("Time");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Highscores");

                    b.HasData(
                        new { Id = 1, Score = 10, Time = new DateTime(2019, 3, 11, 21, 22, 53, 702, DateTimeKind.Local), UserId = 2 }
                    );
                });

            modelBuilder.Entity("ReactLabRemake.Model.QuestionClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorrectAnswer");

                    b.Property<string>("Question");

                    b.Property<int>("Score");

                    b.Property<string>("WrongAnswer1");

                    b.Property<string>("WrongAnswer2");

                    b.Property<string>("WrongAnswer3");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new { Id = 1, CorrectAnswer = "x=2", Question = "5x=10", Score = 3, WrongAnswer1 = "x=3", WrongAnswer2 = "x=4", WrongAnswer3 = "x=1" },
                        new { Id = 2, CorrectAnswer = "x=3", Question = "x^3=81", Score = 5, WrongAnswer1 = "x=2", WrongAnswer2 = "x=1", WrongAnswer3 = "x=4" },
                        new { Id = 3, CorrectAnswer = "x=5", Question = "x^2+6x-30=25", Score = 7, WrongAnswer1 = "x=3", WrongAnswer2 = "x=10", WrongAnswer3 = "x=7" }
                    );
                });

            modelBuilder.Entity("ReactLabRemake.Model.UserClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Highscore");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, Highscore = 0, Name = "Admin", Password = "password" },
                        new { Id = 2, Highscore = 10, Name = "Samuel", Password = "qwert1234" }
                    );
                });

            modelBuilder.Entity("ReactLabRemake.Model.Highscore", b =>
                {
                    b.HasOne("ReactLabRemake.Model.UserClass", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
